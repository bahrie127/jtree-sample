/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * MainFrame.java
 *
 * by Saiful Bahri
 * http://bahrie27.wordpress.com/
 * twitter : @bahrie_bhe
 *
 * Created on Feb 26, 2012, 10:45:52 PM
 */
package sample.jtree.example.frame;

import java.awt.CardLayout;
import java.util.Enumeration;
import java.util.List;
import javax.swing.JPanel;
import javax.swing.tree.DefaultMutableTreeNode;
import javax.swing.tree.DefaultTreeModel;
import javax.swing.tree.TreeNode;
import javax.swing.tree.TreePath;
import sample.jtree.example.entity.Buah;
import sample.jtree.example.entity.Kategori;
import sample.jtree.example.impl.ImplementKategori;
import sample.jtree.example.interf.KategoriInterface;
import sample.jtree.example.util.GaleryListener;
import sample.jtree.example.util.TreeListener;

public class MainFrame extends javax.swing.JFrame {

    /** Creates new form MainFrame */
    public MainFrame() {
        initComponents();
        initTreeListener();
        initGaleryListener();
        showPanelGalery();

        DefaultMutableTreeNode top = new DefaultMutableTreeNode("Buah");
        setTree(top);
        DefaultTreeModel model = new DefaultTreeModel(top);
        panelTree.setModel(model);
        panelTree.setTreePath(autoSelectNode(top, "Semangka"));
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        panelGalery = new sample.jtree.example.ui.PanelGalery();
        panelView = new sample.jtree.example.ui.PanelView();
        panelTree = new sample.jtree.example.ui.PanelTree();
        panelIsi = new javax.swing.JPanel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        panelIsi.setLayout(new java.awt.CardLayout());

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(panelTree, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(panelIsi, javax.swing.GroupLayout.DEFAULT_SIZE, 518, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(panelTree, javax.swing.GroupLayout.DEFAULT_SIZE, 451, Short.MAX_VALUE)
            .addComponent(panelIsi, javax.swing.GroupLayout.DEFAULT_SIZE, 451, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {

            public void run() {
                new MainFrame().setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private sample.jtree.example.ui.PanelGalery panelGalery;
    private javax.swing.JPanel panelIsi;
    private sample.jtree.example.ui.PanelTree panelTree;
    private sample.jtree.example.ui.PanelView panelView;
    // End of variables declaration//GEN-END:variables

    private void initTreeListener() {
        TreeListener listener = new TreeListener() {

            @Override
            public void clickNode(String kategori) {
                panelGalery.setKategori(kategori);
                panelGalery.isiGalery();
                showPanelGalery();
            }

            @Override
            public void clickLeaf(String path) {
                panelView.setPath(path);
                showPanelView();
            }
        };
        panelTree.setListener(listener);
    }

    private void initGaleryListener() {
        GaleryListener listener = new GaleryListener() {

            @Override
            public void clickThumbnail(String path,String title) {
                DefaultMutableTreeNode top = new DefaultMutableTreeNode("root");
                setTree(top);
                DefaultTreeModel model = new DefaultTreeModel(top);
                panelTree.setModel(model);
                panelTree.setTreePath(autoSelectNode(top, title));
                panelView.setPath(path);
                showPanelView();
            }
        };
        panelGalery.setListener(listener);
        panelGalery.setKategori("Buah");
        panelGalery.isiGalery();
    }

    private void showCardLayout(JPanel componentCardLayout, String cardName) {
        panelIsi.removeAll();
        panelIsi.add(componentCardLayout, cardName);
        ((CardLayout) panelIsi.getLayout()).first(panelIsi);
    }

    private void setTree(DefaultMutableTreeNode top) {
        KategoriInterface ki = new ImplementKategori();
        DefaultMutableTreeNode node = null;
        DefaultMutableTreeNode gambar = null;

        List<Kategori> listKategori = ki.getAll();

        for (Kategori kat : listKategori) {
            node = new DefaultMutableTreeNode(kat.getNama());
            top.add(node);
            int x = 0;
            for (Buah b : kat.getListBuah()) {
                gambar = new DefaultMutableTreeNode(kat.getListBuah().get(x));
                node.add(gambar);
                x++;
            }

        }
    }

    private void showPanelView() {
        showCardLayout(panelView, "panelview");
    }

    private void showPanelGalery() {
        showCardLayout(panelGalery, "panelGalery");
    }

    private TreePath autoSelectNode(DefaultMutableTreeNode entityRoot, String nodeStr) {
        DefaultMutableTreeNode node = null;
        Enumeration e = entityRoot.breadthFirstEnumeration();
        while (e.hasMoreElements()) {
            node = (DefaultMutableTreeNode) e.nextElement();
            if ((node.getUserObject().toString()).contains(nodeStr)) {
                DefaultTreeModel m_model = new DefaultTreeModel(entityRoot);
                TreeNode[] nodes = m_model.getPathToRoot(node);
                TreePath path = new TreePath(nodes);
                return path;
            }
        }
        return null;
    }
}
